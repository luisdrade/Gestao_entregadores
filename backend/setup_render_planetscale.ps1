# Script de Configura√ß√£o Render.com + PlanetScale
# Uso: .\setup_render_planetscale.ps1

param(
    [string]$GitHubRepo = "",
    [string]$AppName = "gestao-entregadores"
)

# Cores para output
$Red = "Red"
$Green = "Green"
$Yellow = "Yellow"
$Blue = "Blue"

Write-Host "üöÄ Configura√ß√£o Render.com + PlanetScale MySQL" -ForegroundColor $Green
Write-Host "================================================" -ForegroundColor $Blue

# Verificar se est√° no diret√≥rio correto
if (-not (Test-Path "manage.py")) {
    Write-Host "‚ùå Execute este script no diret√≥rio backend/" -ForegroundColor $Red
    exit 1
}

# Verificar se est√° no Git
if (-not (Test-Path ".git")) {
    Write-Host "‚ùå Este n√£o √© um reposit√≥rio Git" -ForegroundColor $Red
    Write-Host "üí° Execute: git init && git add . && git commit -m 'Initial commit'" -ForegroundColor $Yellow
    exit 1
}

Write-Host "‚úÖ Diret√≥rio correto encontrado" -ForegroundColor $Green

# Verificar se tem mudan√ßas n√£o commitadas
$gitStatus = git status --porcelain
if ($gitStatus) {
    Write-Host "üìù Mudan√ßas n√£o commitadas encontradas:" -ForegroundColor $Yellow
    Write-Host $gitStatus -ForegroundColor $Yellow
    
    $commit = Read-Host "Deseja fazer commit? (y/n)"
    if ($commit -eq "y" -or $commit -eq "Y") {
        git add .
        git commit -m "Configura√ß√µes para Render.com + PlanetScale"
        Write-Host "‚úÖ Commit realizado" -ForegroundColor $Green
    } else {
        Write-Host "‚ö†Ô∏è  Fa√ßa commit das mudan√ßas antes de continuar" -ForegroundColor $Yellow
        exit 1
    }
}

# Verificar se est√° conectado ao GitHub
$remoteUrl = git remote get-url origin 2>$null
if (-not $remoteUrl) {
    Write-Host "‚ùå Nenhum reposit√≥rio remoto configurado" -ForegroundColor $Red
    Write-Host "üí° Configure com: git remote add origin https://github.com/usuario/repositorio.git" -ForegroundColor $Yellow
    exit 1
}

Write-Host "‚úÖ Reposit√≥rio Git configurado: $remoteUrl" -ForegroundColor $Green

# Gerar chave secreta Django
$secretKey = -join ((65..90) + (97..122) | Get-Random -Count 50 | ForEach-Object {[char]$_})
Write-Host "üîë Chave secreta Django gerada: $($secretKey.Substring(0, 20))..." -ForegroundColor $Yellow

# Solicitar informa√ß√µes do PlanetScale
Write-Host "`nüìä Configura√ß√£o do PlanetScale:" -ForegroundColor $Blue
Write-Host "1. Acesse https://planetscale.com" -ForegroundColor $Yellow
Write-Host "2. Crie um banco chamado: $AppName" -ForegroundColor $Yellow
Write-Host "3. Anote as credenciais de conex√£o" -ForegroundColor $Yellow

$dbHost = Read-Host "Host do PlanetScale (ex: xxx.mysql.planetscale.com)"
$dbUser = Read-Host "Usu√°rio do PlanetScale"
$dbPassword = Read-Host "Senha do PlanetScale" -AsSecureString
$dbPasswordPlain = [Runtime.InteropServices.Marshal]::PtrToStringAuto([Runtime.InteropServices.Marshal]::SecureStringToBSTR($dbPassword))

# Solicitar nome do app no Render
$renderAppName = Read-Host "Nome do app no Render (ex: $AppName)"

# Criar arquivo .env para refer√™ncia
$envContent = @"
# Configura√ß√µes para Render.com + PlanetScale
DJANGO_SECRET_KEY=$secretKey
DEBUG=False
ALLOWED_HOSTS=$renderAppName.onrender.com,localhost,127.0.0.1

# PlanetScale MySQL
DB_ENGINE=django.db.backends.mysql
DB_NAME=$AppName
DB_USER=$dbUser
DB_PASSWORD=$dbPasswordPlain
DB_HOST=$dbHost
DB_PORT=3306
DB_SSL_CA=-----BEGIN CERTIFICATE-----\nMIIEQTCCAqmgAwIBAgIUTtG6l4n1u1Y4rBmhJg==\n-----END CERTIFICATE-----

# Static Files
STATIC_URL=/static/
STATIC_ROOT=/opt/render/project/src/staticfiles

# Media Files
MEDIA_URL=/media/
MEDIA_ROOT=/opt/render/project/src/media

# CORS (configure depois)
CORS_ALLOWED_ORIGINS=https://seu-frontend.vercel.app,https://seu-frontend.netlify.app
"@

$envContent | Out-File -FilePath ".env.render" -Encoding UTF8
Write-Host "‚úÖ Arquivo .env.render criado" -ForegroundColor $Green

# Instru√ß√µes para Render.com
Write-Host "`nüåê Pr√≥ximos passos no Render.com:" -ForegroundColor $Blue
Write-Host "1. Acesse https://render.com" -ForegroundColor $Yellow
Write-Host "2. Fa√ßa login com GitHub" -ForegroundColor $Yellow
Write-Host "3. Clique em 'New +' > 'Web Service'" -ForegroundColor $Yellow
Write-Host "4. Conecte seu reposit√≥rio: $remoteUrl" -ForegroundColor $Yellow
Write-Host "5. Configure:" -ForegroundColor $Yellow
Write-Host "   - Name: $renderAppName" -ForegroundColor $Yellow
Write-Host "   - Environment: Python 3" -ForegroundColor $Yellow
Write-Host "   - Build Command: pip install -r requirements.txt" -ForegroundColor $Yellow
Write-Host "   - Start Command: gunicorn sistema.wsgi:application" -ForegroundColor $Yellow
Write-Host "6. Adicione as vari√°veis de ambiente do arquivo .env.render" -ForegroundColor $Yellow

# Instru√ß√µes para PlanetScale
Write-Host "`nüóÑÔ∏è Configura√ß√£o do PlanetScale:" -ForegroundColor $Blue
Write-Host "1. Acesse https://planetscale.com" -ForegroundColor $Yellow
Write-Host "2. Crie um banco chamado: $AppName" -ForegroundColor $Yellow
Write-Host "3. Anote as credenciais de conex√£o" -ForegroundColor $Yellow
Write-Host "4. Use as credenciais no Render.com" -ForegroundColor $Yellow

# Instru√ß√µes p√≥s-deploy
Write-Host "`n‚öôÔ∏è Ap√≥s o deploy no Render:" -ForegroundColor $Blue
Write-Host "1. Acesse o Shell do Render" -ForegroundColor $Yellow
Write-Host "2. Execute: python manage.py migrate" -ForegroundColor $Yellow
Write-Host "3. Execute: python manage.py createsuperuser" -ForegroundColor $Yellow
Write-Host "4. Execute: python manage.py collectstatic --noinput" -ForegroundColor $Yellow

Write-Host "`n‚úÖ Configura√ß√£o conclu√≠da!" -ForegroundColor $Green
Write-Host "üîó Sua app estar√° em: https://$renderAppName.onrender.com" -ForegroundColor $Green
Write-Host "üë®‚Äçüíº Admin Django: https://$renderAppName.onrender.com/admin/" -ForegroundColor $Green

Write-Host "`nüìÅ Arquivos criados:" -ForegroundColor $Blue
Write-Host "- .env.render (vari√°veis de ambiente)" -ForegroundColor $Yellow
Write-Host "- DEPLOY_RENDER_PLANETSCALE.md (guia completo)" -ForegroundColor $Yellow

